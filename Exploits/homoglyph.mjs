let HomoglyphExploit_Template = 
`
//SPDX-License-Identifier:MIT
pragma solidity ^0.8;

${targetContract}

contract ExploitHomoglyph{

    constructor(address _vulnContract){
        contractName vulnContract = contractName(_vulnContract);
    }

    function Exploit(${topLevelFnParams}) public payable {
        vulnContract.${funcName}(${exploitfnParams});
        // For the homoglyph vulnerability, it is an inconvenience for the user to have to enter the correct string
        // Ishan can be sent as ishan, ishaan, eshan, eshaan, eashan, etc.
        // Even if there are checks incorporated which revert the transaction, the transaction fees are still deducted.

    }

    receive() external payable { }

    fallback() external payable { }
}
`